"""add: Создал структуру базы данных

Revision ID: 7f1199596b04
Revises:
Create Date: 2025-03-18 10:35:01.305497

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "7f1199596b04"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "acts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("npa_id", sa.String(length=128), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "npa_id"),
    )
    op.create_table(
        "districts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("full_name", sa.String(length=64), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("short_name", sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "name"),
    )
    op.create_table(
        "documents",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("eo_number", sa.String(length=16), nullable=True),
        sa.Column("complex_name", sa.Text(), nullable=True),
        sa.Column("pages_count", sa.Integer(), nullable=True),
        sa.Column("pdf_file_length", sa.Integer(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("document_date", sa.Date(), nullable=True),
        sa.Column("signatory_authority_id", sa.String(length=256), nullable=True),
        sa.Column("document_type_id", sa.String(length=256), nullable=True),
        sa.Column("title", sa.Text(), nullable=True),
        sa.Column("view_date", sa.Date(), nullable=True),
        sa.Column("external_id", sa.String(length=256), nullable=True),
        sa.Column("hash", sa.String(length=256), nullable=True),
        sa.Column("date_of_publication", sa.Date(), nullable=True),
        sa.Column("date_of_signing", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "eo_number"),
    )
    op.create_index("idx_documents_eo_number", "documents", ["eo_number"], unique=True)
    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "name"),
    )
    op.create_table(
        "regions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("short_name", sa.String(length=64), nullable=False),
        sa.Column("external_id", sa.String(length=64), nullable=False),
        sa.Column("code", sa.String(length=10), nullable=False),
        sa.Column("parent_id", sa.String(length=64), nullable=False),
        sa.Column("id_dist", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_dist"],
            ["districts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "name", "short_name", "external_id", "code"),
    )
    op.create_index("idx_regions_external_id", "regions", ["external_id"], unique=True)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=32), nullable=False),
        sa.Column("id_role", sa.Integer(), nullable=False),
        sa.Column("hash_password", sa.String(length=256), nullable=False),
        sa.Column("date_registered", sa.Date(), nullable=False),
        sa.Column("last_login", sa.Date(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_role"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "username"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users")
    op.drop_index("idx_regions_external_id", table_name="regions")
    op.drop_table("regions")
    op.drop_table("roles")
    op.drop_index("idx_documents_eo_number", table_name="documents")
    op.drop_table("documents")
    op.drop_table("districts")
    op.drop_table("acts")
    # ### end Alembic commands ###
