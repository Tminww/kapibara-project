"""fix: сделал индекс региона на code и name для on conflict

Revision ID: 7b972c09556b
Revises: 308d2cbb0680
Create Date: 2025-03-18 12:38:08.836190

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "7b972c09556b"
down_revision: Union[str, None] = "308d2cbb0680"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "regions_id_name_short_name_external_id_code_key", "regions", type_="unique"
    )
    op.drop_index("idx_regions_external_id", table_name="regions")
    op.create_index("idx_regions_external_id", "regions", ["external_id"], unique=False)
    op.create_index("idx_regions_code", "regions", ["code"], unique=False)
    op.create_index("idx_regions_code_unique", "regions", ["code"], unique=True)
    op.create_unique_constraint("uq_regions_name_code", "regions", ["name", "code"])
    op.drop_column("regions", "parent_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "regions",
        sa.Column(
            "parent_id", sa.VARCHAR(length=64), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint("uq_regions_name_code", "regions", type_="unique")
    op.drop_index("idx_regions_code_unique", table_name="regions")
    op.drop_index("idx_regions_code", table_name="regions")
    op.drop_index("idx_regions_external_id", table_name="regions")
    op.create_index("idx_regions_external_id", "regions", ["code"], unique=True)
    op.create_unique_constraint(
        "regions_id_name_short_name_external_id_code_key",
        "regions",
        ["id", "name", "short_name", "external_id", "code"],
    )
    # ### end Alembic commands ###
