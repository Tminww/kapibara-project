

CREATE TABLE IF NOT EXISTS districts (
	id SERIAL PRIMARY KEY,
	name VARCHAR(50),
	short_name VARCHAR(10),

	UNIQUE (name, short_name)
);

CREATE TABLE IF NOT EXISTS regions (
	id SERIAL PRIMARY KEY, 
	name VARCHAR(128), 
	short_name VARCHAR(10),
	external_id VARCHAR(64),
	code VARCHAR(10),
	parent_id VARCHAR(64),
	id_dist INTEGER, 

	UNIQUE (name, short_name, external_id, code),
	FOREIGN KEY(id_dist) REFERENCES districts (id)
);

CREATE TABLE IF NOT EXISTS receiving_authorities (
	id SERIAL PRIMARY KEY, 
	name VARCHAR(128), 
	short_name VARCHAR(50),
	code VARCHAR(50),

	UNIQUE (name, short_name, code)
);

CREATE TABLE IF NOT EXISTS blocks  (
	id SERIAL PRIMARY KEY, 
	name VARCHAR(128), 
	short_name VARCHAR(50),
	id_organ INT,
	id_reg INT NULL,

	FOREIGN KEY(id_organ) REFERENCES receiving_authorities (id), 
	FOREIGN KEY(id_reg) REFERENCES regions (id), 
	UNIQUE (name, short_name, id_organ, id_reg)
);

CREATE TABLE IF NOT EXISTS deadlines  (
	id SERIAL PRIMARY KEY, 
	day INT, 

	UNIQUE (day)
);

CREATE TABLE IF NOT EXISTS document_types  (
	id SERIAL PRIMARY KEY, 
	name VARCHAR(128), 
	external_id VARCHAR(64),
	id_dl INT,
	
	FOREIGN KEY(id_dl) REFERENCES deadlines (id), 
	UNIQUE (name, short_name, external_id)
);

CREATE TABLE IF NOT EXISTS document_types__blocks  (
	id SERIAL PRIMARY KEY, 
	id_doc_type INT, 
	id_block INT,
	
	FOREIGN KEY(id_doc_type) REFERENCES document_types (id),
	FOREIGN KEY(id_block) REFERENCES blocks (id),
	UNIQUE (id_doc_type, id_block)
);

CREATE TABLE IF NOT EXISTS documents (
	id BIGSERIAL PRIMARY KEY, 
	name TEXT NOT NULL,
	eo_number VARCHAR(16), 
	view_date DATE, 
	hash VARCHAR(128),
	pages_count INT, 
	id_doc_type_block INT, 
	
	UNIQUE (name, eo_number, hash, id_doc_type_block), 
	FOREIGN KEY(id_doc_type_block) REFERENCES document_types__blocks (id)
);

CREATE TABLE IF NOT EXISTS roles (
	id serial PRIMARY KEY, 
	name VARCHAR(32),
	
	UNIQUE (name)

);

CREATE TABLE IF NOT EXISTS users (
	id serial PRIMARY KEY, 
	username VARCHAR(16),
	id_role INT,
	hash_password VARCHAR(16), 
	date_registered TIMESTAMP, 
	last_login TIMESTAMP,
	is_active bool, 
	
	UNIQUE (username), 
	FOREIGN KEY(id_role) REFERENCES roles (id)
)







