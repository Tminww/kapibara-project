#!/bin/bash
# deploy_offline.sh - –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Ü–µ–ª–µ–≤–æ–π –º–∞—à–∏–Ω–µ

set -e

PACKAGE_NAME=""
EXTRACT_DIR="kapibara_deployment"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    cat << EOF
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–ò] –ê–†–•–ò–í

–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Kapibara –∏–∑ –æ—Ñ—Ñ–ª–∞–π–Ω –ø–∞–∫–µ—Ç–∞

–û–ü–¶–ò–ò:
    -h, --help          –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
    -d, --dir DIR       –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $EXTRACT_DIR)
    --no-start          –ù–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞
    --cleanup           –£–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø–æ—Å–ª–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

–ü–†–ò–ú–ï–†–´:
    $0 kapibara_offline_20241215_143022.tar.gz
    $0 -d /opt/kapibara --no-start package.tar.gz
EOF
}

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
AUTO_START=true
CLEANUP=false

while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            exit 0
            ;;
        -d|--dir)
            EXTRACT_DIR="$2"
            shift 2
            ;;
        --no-start)
            AUTO_START=false
            shift
            ;;
        --cleanup)
            CLEANUP=true
            shift
            ;;
        -*)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            show_help
            exit 1
            ;;
        *)
            if [ -z "$PACKAGE_NAME" ]; then
                PACKAGE_NAME="$1"
            else
                echo "‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤"
                show_help
                exit 1
            fi
            shift
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
if [ -z "$PACKAGE_NAME" ]; then
    echo "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω —Ñ–∞–π–ª –ø–∞–∫–µ—Ç–∞"
    show_help
    exit 1
fi

if [ ! -f "$PACKAGE_NAME" ]; then
    echo "‚ùå –§–∞–π–ª $PACKAGE_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Kapibara –∏–∑ $PACKAGE_NAME"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º
echo "üì¶ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞..."
mkdir -p "$EXTRACT_DIR"
tar -xzf "$PACKAGE_NAME" -C "$EXTRACT_DIR" --strip-components=1

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd "$EXTRACT_DIR"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
if [ ! -f "import_images.sh" ]; then
    echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–∞–∫–µ—Ç–∞: import_images.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if [ ! -f "docker-compose.inner.yml" ]; then
    echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–∞–∫–µ—Ç–∞: docker-compose.inner.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º postgres.env
if [ ! -f "postgres.env" ]; then
    echo "‚ö†Ô∏è  –§–∞–π–ª postgres.env –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä..."
    cat > postgres.env << EOF
POSTGRES_DB=kapibara
POSTGRES_USER=kapibara
POSTGRES_PASSWORD=kapibara_password_$(date +%s)
EOF
    echo "üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ postgres.env –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º"
fi

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–∑—ã
echo "üîÑ –ò–º–ø–æ—Ä—Ç Docker –æ–±—Ä–∞–∑–æ–≤..."
chmod +x import_images.sh
./import_images.sh

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
if [ "$AUTO_START" = true ]; then
    echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose -f docker-compose.inner.yml up -d
    
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose -f docker-compose.inner.yml ps
    
    echo ""
    echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
    echo "   Frontend:  http://localhost"
    echo "   Backend:   http://localhost:8080"
    echo "   MailDev:   http://localhost:8090"
    echo "   PostgreSQL: localhost:54321"
    echo "   Redis:     localhost:6379"
    echo ""
    echo "üìã –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
    echo "   –õ–æ–≥–∏:      docker-compose -f docker-compose.inner.yml logs -f"
    echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose -f docker-compose.inner.yml down"
    echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose -f docker-compose.inner.yml restart"
else
    echo "‚úÖ –û–±—Ä–∞–∑—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã. –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   cd $EXTRACT_DIR"
    echo "   docker-compose -f docker-compose.inner.yml up -d"
fi

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
if [ "$CLEANUP" = true ]; then
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    rm -rf images/
    rm import_images.sh
fi

echo "üìÇ –ü—Ä–æ–µ–∫—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –≤: $(pwd)"