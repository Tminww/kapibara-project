services:
  database:
    container_name: kapibara-postgres
    image: postgres:16
    restart: unless-stopped
    ports:
      - "127.0.0.1:5434:5432"
    env_file: "./.env.postgres"
    volumes:
      - kapibara-postgres-data:/var/lib/postgresql/data

  broker:
    container_name: kapibara-redis
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - kapibara-redis-data:/data
    command: redis-server --appendonly yes

  maildev:
    container_name: kapibara-maildev
    image: maildev/maildev
    restart: always
    environment:
      - TZ=Europe/Moscow
      - MAILDEV_WEB_PORT=1080
      - MAILDEV_SMTP_PORT=1025
    ports:
      - "8090:1080"
      - "8025:1025"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: kapibara-pgadmin
  #   restart: unless-stopped
  #   depends_on:
  #     - database
  #   ports:
  #     - "127.0.0.1:8082:80"
  #   env_file: "./pgadmin.env"
  #   volumes:
  #     - kapibara-pgadmin-data:/var/lib/pgadmin

  # parser:
  #   build: ./parser/
  #   container_name: kapibara-parser
  #   restart: unless-stopped
  #   depends_on:
  #     - database

  # backend:
  #   build: ./backend/
  #   container_name: kapibara-backend
  #   restart: unless-stopped
  #   volumes:
  #     - ./backend/src:/code/
  #   depends_on:
  #     - database
  #   ports:
  #     - "127.0.0.1:8080:80"

  # frontend:
  #   build: ./frontend/
  #   container_name: kapibara-frontend
  #   volumes:
  #     - "./frontend:/code/"
  #     - "/code/node_modules"
  #   depends_on:
  #     - backend
  #   ports:
  #     - "127.0.0.1:8081:5173"

volumes:
  kapibara-postgres-data:
  kapibara-pgadmin-data:
  kapibara-redis-data:
