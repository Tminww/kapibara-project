"""create all tables

Revision ID: d0f3aac55ec2
Revises: 
Create Date: 2024-03-08 18:18:53.264754

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d0f3aac55ec2"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "deadlines",
        sa.Column("day", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "day"),
    )
    op.create_table(
        "districts",
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("short_name", sa.String(length=8), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "name", "short_name"),
    )
    op.create_table(
        "organs",
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("short_name", sa.String(length=64), nullable=False),
        sa.Column("code", sa.String(length=64), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "name", "short_name", "code"),
    )
    op.create_table(
        "roles",
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "name"),
    )
    op.create_table(
        "document_types",
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("external_id", sa.String(length=64), nullable=False),
        sa.Column("id_dl", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_dl"],
            ["deadlines.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "name", "external_id"),
    )
    op.create_table(
        "regions",
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("short_name", sa.String(length=16), nullable=False),
        sa.Column("external_id", sa.String(length=64), nullable=False),
        sa.Column("code", sa.String(length=10), nullable=False),
        sa.Column("parent_id", sa.String(length=64), nullable=False),
        sa.Column("id_dist", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_dist"],
            ["districts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "name", "short_name", "external_id", "code"),
    )
    op.create_table(
        "users",
        sa.Column("username", sa.String(length=32), nullable=False),
        sa.Column("id_role", sa.Integer(), nullable=False),
        sa.Column("hash_password", sa.String(length=256), nullable=False),
        sa.Column("date_registered", sa.Date(), nullable=False),
        sa.Column("last_login", sa.Date(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_role"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "username"),
    )
    op.create_table(
        "blocks",
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("short_name", sa.String(length=64), nullable=False),
        sa.Column("id_organ", sa.Integer(), nullable=True),
        sa.Column("id_reg", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_organ"],
            ["organs.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_reg"],
            ["regions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "name", "short_name", "id_organ", "id_reg"),
    )
    op.create_table(
        "document_types__blocks",
        sa.Column("id_doc_type", sa.Integer(), nullable=True),
        sa.Column("id_block", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_block"],
            ["blocks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_doc_type"],
            ["document_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "id_doc_type", "id_block"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("document_types__blocks")
    op.drop_table("blocks")
    op.drop_table("users")
    op.drop_table("regions")
    op.drop_table("document_types")
    op.drop_table("roles")
    op.drop_table("organs")
    op.drop_table("districts")
    op.drop_table("deadlines")
    # ### end Alembic commands ###
