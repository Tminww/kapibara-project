    def statistics_for_last_year(self):
        today = datetime.today()
        # вычисляем дату на конец прошлого года
        last_year_end = today.replace(day=1, month=1) - timedelta(days=1)
        # вычисляем дату на начало прошлого календарного месяца
        last_year_begin = last_year_end.replace(day=1, month=1)

        # форматируем дату для использования в запросе
        last_year_end_str = last_year_end.strftime("%d.%m.%Y")
        last_year_begin_str = last_year_begin.strftime("%d.%m.%Y")

        # формируем запрос для получения данных за прошлый календарный месяц
        query = (f'''SELECT COUNT(*), id_act FROM document WHERE 
                 publication_date >= \'{last_year_begin_str}\' AND 
                 publication_date <= \'{last_year_end_str}\' GROUP BY id_act''')
        self.cursor.execute(query)
        results = self.cursor.fetchall()

        print("За период с ", last_year_begin_str, " по ", last_year_end_str)
        print(self.__sql_parser(results))

    def statistics_for_the_period(self, date_begin_str, date_end_str):
        query = (f'''SELECT COUNT(*), id_act FROM document WHERE 
                         publication_date >= \'{date_begin_str}\' AND 
                         publication_date <= \'{date_end_str}\' 
                         GROUP BY id_act''')
        self.cursor.execute(query)
        results = self.cursor.fetchall()

        print("За период с ", date_begin_str, " по ", date_end_str)
        print(self.__sql_parser(results))

    def statistics_for_last_month(self):
        today = datetime.today()
        # вычисляем дату на конец прошлого календарного месяца
        last_month_end = today.replace(day=1) - timedelta(days=1)
        # вычисляем дату на начало прошлого календарного месяца
        last_month_begin = last_month_end.replace(day=1)

        # форматируем дату для использования в запросе
        last_month_end_str = last_month_end.strftime("%d.%m.%Y")
        last_month_begin_str = last_month_begin.strftime("%d.%m.%Y")

        # формируем запрос для получения данных за прошлый календарный месяц
        query = (f'''SELECT COUNT(*), id_act FROM document WHERE 
                 publication_date >= \'{last_month_begin_str}\' AND 
                 publication_date <= \'{last_month_end_str}\' 
                 GROUP BY id_act''')
        self.cursor.execute(query)
        results = self.cursor.fetchall()

        print("За период с ", last_month_begin_str, " по ", last_month_end_str)
        print(self.__sql_parser(results))

    def statistics_for_last_year_in_region(self, region):
        today = datetime.today()
        # вычисляем дату на конец прошлого года
        last_year_end = today.replace(day=1, month=1) - timedelta(days=1)
        # вычисляем дату на начало прошлого календарного месяца
        last_year_begin = last_year_end.replace(day=1, month=1)

        # форматируем дату для использования в запросе
        last_year_end_str = last_year_end.strftime("%d.%m.%Y")
        last_year_begin_str = last_year_begin.strftime("%d.%m.%Y")

        # формируем запрос для получения данных за прошлый календарный месяц
        query = (f'''SELECT COUNT(*), id_act, id_reg FROM document WHERE 
                 id_reg = {region} AND     
                 publication_date >= \'{last_year_begin_str}\' AND 
                 publication_date <= \'{last_year_end_str}\' GROUP BY id_act, id_reg''')
        self.cursor.execute(query)
        results = self.cursor.fetchall()

        print("За период с ", last_year_begin_str, " по ", last_year_end_str, "в регионе ", region)
        print(self.__sql_parser(results))

    def statistics_for_the_period_in_region(self, date_begin_str, date_end_str):
        query = (f'''SELECT COUNT(*), id_act FROM document WHERE 
                         publication_date >= \'{date_begin_str}\' AND 
                         publication_date <= \'{date_end_str}\' 
                         GROUP BY id_act''')
        self.cursor.execute(query)
        results = self.cursor.fetchall()

        print("За период с ", date_begin_str, " по ", date_end_str)
        print(self.__sql_parser(results))

    def statistics_for_last_month_in_region(self):
        today = datetime.today()
        # вычисляем дату на конец прошлого календарного месяца
        last_month_end = today.replace(day=1) - timedelta(days=1)
        # вычисляем дату на начало прошлого календарного месяца
        last_month_begin = last_month_end.replace(day=1)

        # форматируем дату для использования в запросе
        last_month_end_str = last_month_end.strftime("%d.%m.%Y")
        last_month_begin_str = last_month_begin.strftime("%d.%m.%Y")

        # формируем запрос для получения данных за прошлый календарный месяц
        query = (f'''SELECT COUNT(*), id_act FROM document WHERE 
                 publication_date >= \'{last_month_begin_str}\' AND 
                 publication_date <= \'{last_month_end_str}\' 
                 GROUP BY id_act''')
        self.cursor.execute(query)
        results = self.cursor.fetchall()

        print("За период с ", last_month_begin_str, " по ", last_month_end_str)
        print(self.__sql_parser(results))

    def __sql_parser(self, results):
        count_all_documents = 0
        sql_statistics = {}

        for result in results:
            count_all_documents += result[0]
            query = (f'SELECT name FROM act WHERE id_act = {result[1]}')
            self.cursor.execute(query)
            act = self.cursor.fetchone()[0]
            sql_statistics[f'{act}'] = result[0]

        sql_statistics['Всего'] = count_all_documents
        return sql_statistics


SELECT r.name, a.name, count(*)
FROM region as r
    INNER JOIN document as d
    ON r.id_reg = d.id_reg 
    INNER JOIN act as a
    ON a.id_act = d.id_act 
	GROUP BY r.name, a.name
	ORDER BY r.name
для всех документов 

SELECT r.name, a.name, count(*)
FROM region as r
    INNER JOIN document as d
    ON r.id_reg = d.id_reg and r.code = 'region01'
    INNER JOIN act as a
    ON a.id_act = d.id_act 
	GROUP BY r.name, a.name
	ORDER BY r.name

для конкретного региона

SELECT r.name, a.name, count(*)
FROM region as r
    INNER JOIN document as d
    ON r.id_reg = d.id_reg 
	and r.code = 'region01'
	and d.viewDate >= '2023-09-01' AND d.viewDate <= '2023-10-01'
    INNER JOIN act as a
    ON a.id_act = d.id_act 
	GROUP BY r.name, a.name
	ORDER BY r.name

для промежутка дат и региона

SELECT r.name, a.name, count(*)
FROM region as r
    INNER JOIN document as d
    ON r.id_reg = d.id_reg 
	and d.viewDate >= '2023-09-01' AND d.viewDate <= '2023-10-01'
    INNER JOIN act as a
    ON a.id_act = d.id_act 
	GROUP BY r.name, a.name
	ORDER BY r.name

для всех регионов в интервале дат 


